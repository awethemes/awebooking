{"version":3,"names":[],"mappings":"","sources":["utils/rangePlugin.js"],"sourcesContent":["(function () {\n  'use strict';\n\n  function rangePlugin(config) {\n    if (config === void 0) {\n      config = {};\n    }\n\n    return function (fp) {\n      var dateFormat = \"\",\n          secondInput,\n          _secondInputFocused,\n          _prevDates;\n\n      var createSecondInput = function createSecondInput() {\n        if (config.input) {\n          secondInput = config.input instanceof Element ? config.input : window.document.querySelector(config.input);\n        } else {\n          secondInput = fp._input.cloneNode();\n          secondInput.removeAttribute(\"id\");\n          secondInput._flatpickr = undefined;\n        }\n\n        if (secondInput.value) {\n          var parsedDate = fp.parseDate(secondInput.value);\n          if (parsedDate) fp.selectedDates.push(parsedDate);\n        }\n\n        secondInput.setAttribute(\"data-fp-omit\", \"\");\n\n        fp._bind(secondInput, [\"focus\", \"click\"], function () {\n          if (fp.selectedDates[1]) {\n            fp.latestSelectedDateObj = fp.selectedDates[1];\n\n            fp._setHoursFromDate(fp.selectedDates[1]);\n\n            fp.jumpToDate(fp.selectedDates[1]);\n          }\n          _secondInputFocused = true;\n          fp.isOpen = false;\n          fp.open(undefined, secondInput);\n        });\n\n        fp._bind(fp._input, [\"focus\", \"click\"], function (e) {\n          e.preventDefault();\n          fp.isOpen = false;\n          fp.open();\n        });\n\n        if (fp.config.allowInput) fp._bind(secondInput, \"keydown\", function (e) {\n          if (e.key === \"Enter\") {\n            fp.setDate([fp.selectedDates[0], secondInput.value], true, dateFormat);\n            secondInput.click();\n          }\n        });\n        if (!config.input) fp._input.parentNode && fp._input.parentNode.insertBefore(secondInput, fp._input.nextSibling);\n      };\n\n      var plugin = {\n        onParseConfig: function onParseConfig() {\n          fp.config.mode = \"range\";\n          dateFormat = fp.config.altInput ? fp.config.altFormat : fp.config.dateFormat;\n        },\n        onReady: function onReady() {\n          createSecondInput();\n          fp.config.ignoredFocusElements.push(secondInput);\n\n          if (fp.config.allowInput) {\n            fp._input.removeAttribute(\"readonly\");\n\n            secondInput.removeAttribute(\"readonly\");\n          } else {\n            secondInput.setAttribute(\"readonly\", \"readonly\");\n          }\n\n          fp._bind(fp._input, \"focus\", function () {\n            fp.latestSelectedDateObj = fp.selectedDates[0];\n\n            fp._setHoursFromDate(fp.selectedDates[0]);\n            _secondInputFocused = false;\n            fp.jumpToDate(fp.selectedDates[0]);\n          });\n\n          if (fp.config.allowInput) fp._bind(fp._input, \"keydown\", function (e) {\n            if (e.key === \"Enter\") fp.setDate([fp._input.value, fp.selectedDates[1]], true, dateFormat);\n          });\n          fp.setDate(fp.selectedDates, false);\n          plugin.onValueUpdate(fp.selectedDates);\n        },\n        onPreCalendarPosition: function onPreCalendarPosition() {\n          if (_secondInputFocused) {\n            fp._positionElement = secondInput;\n            setTimeout(function () {\n              fp._positionElement = fp._input;\n            }, 0);\n          }\n        },\n        onChange: function onChange() {\n          if (!fp.selectedDates.length) {\n            setTimeout(function () {\n              if (fp.selectedDates.length) return;\n              secondInput.value = \"\";\n              _prevDates = [];\n            }, 10);\n          }\n\n          if (_secondInputFocused) {\n            setTimeout(function () {\n              secondInput.focus();\n            }, 0);\n          }\n        },\n        onDestroy: function onDestroy() {\n          if (!config.input) secondInput.parentNode && secondInput.parentNode.removeChild(secondInput);\n        },\n        onValueUpdate: function onValueUpdate(selDates) {\n          if (!secondInput) return;\n          _prevDates = !_prevDates || selDates.length >= _prevDates.length ? selDates.concat() : _prevDates;\n\n          if (_prevDates.length > selDates.length) {\n            var newSelectedDate = selDates[0];\n            var newDates = _secondInputFocused ? [_prevDates[0], newSelectedDate] : [newSelectedDate, _prevDates[1]];\n            fp.setDate(newDates, false);\n            _prevDates = newDates.concat();\n          }\n\n          var _selectedDates = fp.selectedDates.map(function (d) {\n            return fp.formatDate(d, dateFormat);\n          });\n\n          var _selectedDates2 = _selectedDates[0];\n          fp._input.value = _selectedDates2 === void 0 ? \"\" : _selectedDates2;\n\n          var _selectedDates3 = _selectedDates[1];\n          secondInput.value = _selectedDates3 === void 0 ? \"\" : _selectedDates3;\n        }\n      };\n\n      return plugin;\n    };\n  }\n\n  window.rangePlugin = rangePlugin;\n\n})();\n"],"file":"rangePlugin.js"}