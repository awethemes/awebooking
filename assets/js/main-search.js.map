{"version":3,"names":[],"mappings":"","sources":["main-search.js"],"sourcesContent":["(function($, plugin) {\r\n  'use strict';\r\n\r\n  /**\r\n   * Create inline select dates.\r\n   *\r\n   * @param  {HTMLElement} el\r\n   * @return {void}\r\n   */\r\n  function createInlineDates(el) {\r\n    const fp = flatpickr;\r\n\r\n    // Handle dates picked.\r\n    const onPickedDates = function(dates, str, instance) {\r\n      const $form = $(this.element).closest('form');\r\n\r\n      $form.find('input[name=\"check-in\"]').val(\r\n        dates[0] ? fp.formatDate(dates[0], instance.config.dateFormat) : ''\r\n      ).trigger('change');\r\n\r\n      $form.find('input[name=\"check-out\"]').val(\r\n        dates[1] ? fp.formatDate(dates[1], instance.config.dateFormat) : ''\r\n      ).trigger('change');\r\n\r\n      if (dates.length === 2) {\r\n        $form.trigger('ready');\r\n      } else {\r\n        $form.trigger('notReady');\r\n      }\r\n    };\r\n\r\n    // Create the datepicker.\r\n    const datepicker = plugin.datepicker(el, {\r\n      inline: true,\r\n      static: true,\r\n      altInput: false,\r\n      onChange: onPickedDates,\r\n    });\r\n\r\n    $('body').on('keydown', (e) => {\r\n      (e.keyCode === 27 && datepicker.clear());\r\n    });\r\n\r\n    // Handle form state.\r\n    const $form = $(datepicker.element).closest('form');\r\n    $form.find('[type=\"submit\"]').prop('disabled', true);\r\n\r\n    $form.on('ready', () => {\r\n      $form.find('[type=\"submit\"]').prop('disabled', false);\r\n    }).on('notReady', () => {\r\n      $form.find('[type=\"submit\"]').prop('disabled', true);\r\n    });\r\n  }\r\n\r\n  $(function() {\r\n\r\n    // Create inline select dates.\r\n    const $inlineDates = $('#js-inline-dates');\r\n    if ($inlineDates.length) {\r\n      createInlineDates($inlineDates[0]);\r\n    }\r\n\r\n  });\r\n\r\n})(jQuery, window.awebooking);\r\n"],"file":"main-search.js"}