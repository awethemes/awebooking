{"version":3,"names":[],"mappings":"","sources":["main-search.js"],"sourcesContent":["(function($, plugin) {\n  'use strict';\n\n  /**\n   * Create inline select dates.\n   *\n   * @param  {HTMLElement} el\n   * @return {void}\n   */\n  function createInlineDates(el) {\n    const fp = flatpickr;\n\n    // Handle dates picked.\n    const onPickedDates = function(dates, str, instance) {\n      const $form = $(this.element).closest('form');\n\n      $form.find('input[name=\"check-in\"]').val(\n        dates[0] ? fp.formatDate(dates[0], instance.config.dateFormat) : ''\n      ).trigger('change');\n\n      $form.find('input[name=\"check-out\"]').val(\n        dates[1] ? fp.formatDate(dates[1], instance.config.dateFormat) : ''\n      ).trigger('change');\n\n      if (dates.length === 2) {\n        $form.trigger('ready');\n      } else {\n        $form.trigger('notReady');\n      }\n    };\n\n    // Create the datepicker.\n    const datepicker = plugin.datepicker(el, {\n      inline: true,\n      static: true,\n      altInput: false,\n      onChange: onPickedDates,\n    });\n\n    $('body').on('keydown', (e) => {\n      (e.keyCode === 27 && datepicker.clear());\n    });\n\n    // Handle form state.\n    const $form = $(datepicker.element).closest('form');\n    $form.find('[type=\"submit\"]').prop('disabled', true);\n\n    $form.on('ready', () => {\n      $form.find('[type=\"submit\"]').prop('disabled', false);\n    }).on('notReady', () => {\n      $form.find('[type=\"submit\"]').prop('disabled', true);\n    });\n  }\n\n  $(function() {\n\n    // Create inline select dates.\n    const $inlineDates = $('#js-inline-dates');\n    if ($inlineDates.length) {\n      createInlineDates($inlineDates[0]);\n    }\n\n  });\n\n})(jQuery, window.awebooking);\n"],"file":"main-search.js"}